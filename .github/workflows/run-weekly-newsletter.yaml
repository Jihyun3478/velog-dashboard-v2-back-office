name: Weekly Newsletter Batch

on:
  workflow_dispatch:
  schedule:
    # 매주 월요일 오전 7시(KST, UTC+9) 실행 -> UTC 기준 일요일 22:00
    - cron: "0 22 * * 0"

jobs:
  weekly-newsletter-batch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.0

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.8.4

      - name: Setup a local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Define a cache for the virtual environment
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}-${{ runner.os }}

      - name: Install dependencies
        run: poetry install --with dev

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DEBUG=False" >> .env
          echo "DATABASE_ENGINE=${{ secrets.DATABASE_ENGINE }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
          echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
          echo "AES_KEY_0=${{ secrets.AES_KEY_0 }}" >> .env
          echo "AES_KEY_1=${{ secrets.AES_KEY_1 }}" >> .env
          echo "AES_KEY_2=${{ secrets.AES_KEY_2 }}" >> .env
          echo "AES_KEY_3=${{ secrets.AES_KEY_3 }}" >> .env
          echo "AES_KEY_4=${{ secrets.AES_KEY_4 }}" >> .env
          echo "AES_KEY_5=${{ secrets.AES_KEY_5 }}" >> .env
          echo "AES_KEY_6=${{ secrets.AES_KEY_6 }}" >> .env
          echo "AES_KEY_7=${{ secrets.AES_KEY_7 }}" >> .env
          echo "AES_KEY_8=${{ secrets.AES_KEY_8 }}" >> .env
          echo "AES_KEY_9=${{ secrets.AES_KEY_9 }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
          echo "DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}" >> .env

      - name: Run Weekly Newsletter Batch Script
        id: weekly-newsletter-main
        timeout-minutes: 48
        env:
          DJANGO_SETTINGS_MODULE: backoffice.settings.prod
        run: |
          set -e
          poetry run python ./insight/tasks/weekly_newsletter_batch.py

      # KST 시간을 GitHub Actions 환경 변수에 세팅
      - name: Get Current KST Time
        if: always()
        run: echo "KST_TIME=$(TZ=Asia/Seoul date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      # 결과 파일 읽기
      - name: Read Result Output
        if: always()
        id: read-result
        run: |
          if [ -f newsletter_batch_result.txt ]; then
            RESULT=$(cat newsletter_batch_result.txt)
            echo "RESULT<<EOF" >> $GITHUB_OUTPUT
            echo "$RESULT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "RESULT=No output file found" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack Notification on Success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "*Weekly Newsletter Batch*\n\n✅ *Status:* Success\n📅 *Timestamp (KST):* ${{ env.KST_TIME }}\n📝 *Result:* \n```${{ steps.read-result.outputs.RESULT }}```\n🔗 *Workflow URL:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Notification on Failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "*Weekly Newsletter Batch*\n\n❌ *Status:* Failure\n📅 *Timestamp (KST):* ${{ env.KST_TIME }}\n📝 *Result:* \n```${{ steps.read-result.outputs.RESULT }}```\n🔗 *Workflow URL:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
